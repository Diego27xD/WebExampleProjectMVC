@model PagedList.IPagedList<WebExampleProject.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Students";
}

<style>
    
    .htMenu {
        height: auto !important;
    }
    .handsontable tr td {
        align-items: center;
    }
    thead tr{
        height: auto !important;
        
    }
</style>
<h2>Students</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table" id="table_students">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            First Name
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>Acciones</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<div id="example"></div>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


<script>
    const container = document.querySelector('#example');

    let table = document.getElementById("table_students");
    let data = [];

    for (var i = 1; i < table.rows.length; i++) {
        var row = [];
        for (var j = 0; j < table.rows[i].cells.length; j++) {
            row.push(table.rows[i].cells[j].innerHTML);
        }

        data.push(row)
    }

    let rows = table.rows;
    let columns = rows[0].cells.length;

    let colHeaders = [];
    for (let i = 0; i < columns; i++) {
        colHeaders.push(rows[0].cells[i].textContent.trim());
    }

    console.log(data)
    console.log(colHeaders)
    

    const hot = new Handsontable(container, {
        data: data,
        columns: [
            {
                data: 0,
                type: "text"
            },
            {
                data: 1,
                type: "text"
            },
            {
                data: 2,
                type: "date",
                allowInvalid: false
            },
            {
                data: 3,
                renderer: "html"
            }
        ],
        scrollY: true,
        scrollX: true,
        height: 500,
        width: 500,
        rowHeights: 107,
        colHeaders: colHeaders,
        rowHeaders: true,
        customBorders: true,
        dropdownMenu: true,
        multiColumnSorting: true,
        filters: true,
        manualRowMove: true,
        licenseKey: 'non-commercial-and-evaluation' // for non-commercial use only
    });


</script>